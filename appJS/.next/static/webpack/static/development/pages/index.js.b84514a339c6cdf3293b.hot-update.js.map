{"version":3,"file":"static/webpack/static/development/pages/index.js.b84514a339c6cdf3293b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link'\nimport React, { useState } from \"react\";\nimport { Grid, Image, Divider, Button, Header, Modal, Input, Form, Segment } from 'semantic-ui-react'\nimport axios from \"axios\"\n\nfunction Home() {\n\n  const [temperature, setTemperature] = useState(\"\");\n  const [forecast, setForecast] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n\n  var d = new Date();\n\n  const phillyWoeId = 2471217;\n  var month = d.getMonth() + 1;\n  var day = d.getDate();\n  var year = d.getFullYear();\n\n  var endURL = \"\" + phillyWoeId + \"/\" + year + \"/\" + month + \"/\" + day + \"/\";\n\n  axios.get(\"https://www.metaweather.com/api/location/\" + endURL).then((responseGet) => {\n    console.log(responseGet);\n    var temp = responseGet.data[36].the_temp * (9.0 / 5) + 32.0;\n    setTemperature(temp.toFixed(1));\n    setForecast(responseGet.data[36].weather_state_name.toLowerCase());\n    if (responseGet.data[36].weather_state_name.toLowerCase().includes(\"cloud\")) {\n      setPic(\"https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/91789275_3796902540350047_445788270698168320_n.jpg?_nc_cat=105&_nc_sid=8024bb&_nc_ohc=gP6FPoLPhYoAX9GMdnG&_nc_ht=scontent-iad3-1.xx&oh=b2ce54fbd3be5efa69bb47af18069ba2&oe=5EA7C05C\");\n    } else if (responseGet.data[36].weather_state_name.toLowerCase().includes(\"rain\") || responseGet.data[36].weather_state_name.toLowerCase().includes(\"shower\")) {\n      setPic(\"https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/91805606_3796902543683380_8138526403839655936_n.jpg?_nc_cat=108&_nc_sid=8024bb&_nc_ohc=Yh7RICCEdUMAX-U9dUz&_nc_ht=scontent-iad3-1.xx&oh=b846e7f91baf2542ffa275f29a974d35&oe=5EA703D2\");\n    } else if (responseGet.data[36].weather_state_name.toLowerCase().includes(\"clear\")) {\n      setPic(\"https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/91473012_3796902630350038_6098355064940789760_n.jpg?_nc_cat=100&_nc_sid=8024bb&_nc_ohc=Wj8z1CBeJqgAX8NHVHG&_nc_ht=scontent-iad3-1.xx&oh=d01e337cbbb5bb02b7e6e2041d6c2568&oe=5EA74F93\");\n    }\n  });\n\n  var n = d.getHours();\n  var greeting = \"\";\n\n  if (n < 12) {\n    greeting = \"Good morning\";\n  } else if (n < 17) {\n    greeting = \"Good afternoon\";\n  } else {\n    greeting = \"Good evening\";\n  }\n\n  return (\n\n    <div style={{ paddingLeft: '8px' }}>\n      <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n      <h1 class=\"ui header\">WelcomeIN</h1>\n      <div class=\"ui inverted menu\">\n        <a class=\"active item\">\n          Home\n        </a>\n        <Link href=\"/users\">\n          <a className=\"item\">\n            Authorized Individuals\n          </a>\n        </Link>\n        <Link href=\"/settings\">\n          <a className=\"item\">\n            Notification Settings            </a>\n        </Link>\n        <Link href=\"/footage\">\n          <a className=\"item\">\n            Footage\n      </a>\n        </Link>\n        <div class=\"ui container\">\n          <div class=\" ui clearing segment\">\n            <div>\n              <a className=\"item\">\n                <Modal trigger={\n                  <button textAlign=\"right\" class=\"small ui button\">\n                    Login\n          </button>\n                }>\n                  <Modal.Header>WelcomeIN</Modal.Header>\n                  <Modal.Content>\n                    <Modal.Description>\n                      <Header>Log In</Header>\n                      <p>\n                        <form className=\"ui form\">\n                          <div className=\"field\">\n                            <label>Email</label>\n                            <input name=\"email\" type=\"text\" placeholder=\"example@gmail.com\">\n                            </input>\n                            <Divider horizontal></Divider>\n                            <label>Password</label>\n                            <input name=\"password\" type=\"text\" placeholder=\"Password...\">\n                            </input>\n                            <Divider horizontal></Divider>\n                            <button class=\"small ui button\">\n                              LOGIN\n                        </button>\n                            <Divider horizontal>OR</Divider>\n                            <Segment>\n                              <Segment basic textAlign={\"center\"}>\n                                <p>Don't have an account?</p>\n                                <Modal trigger={\n                                  <Button type=\"button\" style={{ textAlign: \"center\" }}>SIGN UP</Button>\n                                }>\n                                  <Modal.Header>WelcomeIN</Modal.Header>\n                                  <Modal.Content>\n                                    <Modal.Description>\n                                      <Header>Sign Up</Header>\n                                      <p>\n                                        <form className=\"ui form\">\n                                          <div className=\"field\">\n                                            <label>First Name:</label>\n                                            <input name=\"FName\" type=\"text\" placeholder=\"John\">\n                                            </input>\n                                            <Divider horizontal></Divider>\n                                            <label>Last Name:</label>\n                                            <input name=\"LName\" type=\"text\" placeholder=\"Doe\">\n                                            </input>\n                                            <Divider horizontal></Divider>\n                                            <div class=\"ui form\">\n                                              <div class=\"inline fields\">\n                                                <label>Phone Number:</label>\n                                                <div class=\"field\">\n                                                  <input type=\"text\" placeholder=\"(xxx)\">\n                                                  </input>\n                                                </div>\n                                                <div class=\"field\">\n                                                  <input type=\"text\" placeholder=\"xxx\">\n                                                  </input>\n                                                </div>\n                                                <div class=\"field\">\n                                                  <input type=\"text\" placeholder=\"xxxx\">\n                                                  </input>\n                                                </div>\n                                              </div>\n                                            </div>\n                                            <Divider horizontal></Divider>\n                                            <label>Email:</label>\n                                            <input name=\"email\" type=\"text\" placeholder=\"example@gmail.com\">\n                                            </input>\n                                            <Divider horizontal></Divider>\n                                            <label>Password:</label>\n                                            <input name=\"password\" type=\"text\" placeholder=\"Password...\">\n                                            </input>\n                                            <Divider horizontal></Divider>\n                                            <button class=\"small ui button\">\n                                              SIGN UP\n                                </button>\n                                          </div>\n                                        </form>\n                                      </p>\n                                    </Modal.Description>\n                                  </Modal.Content>\n                                </Modal>\n                              </Segment>\n                            </Segment>\n                          </div>\n                        </form>\n                      </p>\n                    </Modal.Description>\n                  </Modal.Content>\n                </Modal>\n              </a>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div>\n        <img style={{ float: 'left', width: '60%' }} src=\"https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/91440986_3796902550350046_4463254156290818048_n.jpg?_nc_cat=108&_nc_sid=8024bb&_nc_ohc=XSUfZwvhiRsAX-1dZ-l&_nc_ht=scontent-iad3-1.xx&oh=b00b74cf690c9c82040bdb4da31fe637&oe=5EA7AFB7\"></img>\n        <div style={{ float: 'left' }}>\n          <img style={{ width: '60%' }} src={pic}></img>\n          <div style={{ marginLeft: '40px' }}>\n            <h2 style={{ paddingTop: '16px' }}>{greeting}, Shakthi!</h2>\n            <div>\n              <p>The forecast is {(forecast == null) ? <em>Loading...</em> : forecast}.</p>\n              <p>The temperature is {(temperature == null) ? <em>Loading...</em> : temperature} Â°F.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\n\nexport default Home\n\n{/* <Link href=\"/footage\">\n<a>About Us</a>\n</Link> */}\n\n\n// Page.getInitialProps = async ctx => {\n//   const res = await fetch('http://0.0.0.0:8007/footage/')\n//   console.log(res);\n//   return { img }\n// }\n\n// How to get video source from server \n//<video> <source src= 'http://0.0.0.0:8007/footage/' autoplay type=\"video/mp4\"></source></video>"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAusourceRoot":""}